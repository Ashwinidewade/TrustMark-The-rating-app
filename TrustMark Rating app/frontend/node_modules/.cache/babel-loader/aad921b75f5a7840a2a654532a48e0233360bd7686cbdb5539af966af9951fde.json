{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMILE\\\\Downloads\\\\trustpilot-store-rating-app\\\\trustpilot-store-rating-app\\\\frontend\\\\src\\\\components\\\\stores\\\\StoreList\\\\StoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './StoreList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreList = ({\n  searchQuery = '',\n  minRating = 0,\n  maxRating = 5\n}) => {\n  _s();\n  const [stores, setStores] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [page, setPage] = useState(1);\n  const [limit] = useState(10);\n  useEffect(() => {\n    // Example: Fetch stores from API\n    const fetchStores = async () => {\n      try {\n        // Replace with API call\n        const data = [{\n          id: 1,\n          name: 'Store 1',\n          rating: 4.5\n        }, {\n          id: 2,\n          name: 'Store 2',\n          rating: 4.0\n        }];\n        setStores(data);\n        setTotal(data.length);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchStores();\n  }, [searchQuery, minRating, maxRating, page, limit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"store-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stores.map(store => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [store.name, \" - \", store.rating, \"\\u2B50\"]\n      }, store.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Stores: \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreList, \"hScObvGRhMWboUBUicjTgS8sPHs=\");\n_c = StoreList;\nexport default StoreList;\nvar _c;\n$RefreshReg$(_c, \"StoreList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StoreList","searchQuery","minRating","maxRating","_s","stores","setStores","total","setTotal","page","setPage","limit","fetchStores","data","id","name","rating","length","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","store","_c","$RefreshReg$"],"sources":["C:/Users/SMILE/Downloads/trustpilot-store-rating-app/trustpilot-store-rating-app/frontend/src/components/stores/StoreList/StoreList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './StoreList.css';\r\n\r\ninterface StoreListProps {\r\n  searchQuery?: string;\r\n  minRating?: number;\r\n  maxRating?: number;\r\n}\r\n\r\nconst StoreList: React.FC<StoreListProps> = ({\r\n  searchQuery = '',\r\n  minRating = 0,\r\n  maxRating = 5,\r\n}) => {\r\n  const [stores, setStores] = useState<any[]>([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n  const [limit] = useState(10);\r\n\r\n  useEffect(() => {\r\n    // Example: Fetch stores from API\r\n    const fetchStores = async () => {\r\n      try {\r\n        // Replace with API call\r\n        const data = [\r\n          { id: 1, name: 'Store 1', rating: 4.5 },\r\n          { id: 2, name: 'Store 2', rating: 4.0 },\r\n        ];\r\n        setStores(data);\r\n        setTotal(data.length);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    fetchStores();\r\n  }, [searchQuery, minRating, maxRating, page, limit]);\r\n\r\n  return (\r\n    <div className=\"store-list\">\r\n      <h2>Stores</h2>\r\n      <ul>\r\n        {stores.map((store) => (\r\n          <li key={store.id}>\r\n            {store.name} - {store.rating}‚≠ê\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <p>Total Stores: {total}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzB,MAAMC,SAAmC,GAAGA,CAAC;EAC3CC,WAAW,GAAG,EAAE;EAChBC,SAAS,GAAG,CAAC;EACbC,SAAS,GAAG;AACd,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAQ,EAAE,CAAC;EAC/C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACe,KAAK,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5BC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF;QACA,MAAMC,IAAI,GAAG,CACX;UAAEC,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAI,CAAC,EACvC;UAAEF,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAI,CAAC,CACxC;QACDV,SAAS,CAACO,IAAI,CAAC;QACfL,QAAQ,CAACK,IAAI,CAACI,MAAM,CAAC;MACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;IACF,CAAC;IAEDN,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACX,WAAW,EAAEC,SAAS,EAAEC,SAAS,EAAEM,IAAI,EAAEE,KAAK,CAAC,CAAC;EAEpD,oBACEZ,OAAA;IAAKsB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBvB,OAAA;MAAAuB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACf3B,OAAA;MAAAuB,QAAA,EACGjB,MAAM,CAACsB,GAAG,CAAEC,KAAK,iBAChB7B,OAAA;QAAAuB,QAAA,GACGM,KAAK,CAACb,IAAI,EAAC,KAAG,EAACa,KAAK,CAACZ,MAAM,EAAC,QAC/B;MAAA,GAFSY,KAAK,CAACd,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL3B,OAAA;MAAAuB,QAAA,GAAG,gBAAc,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACtB,EAAA,CA1CIJ,SAAmC;AAAA6B,EAAA,GAAnC7B,SAAmC;AA4CzC,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}