{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMILE\\\\Downloads\\\\trustpilot-store-rating-app\\\\trustpilot-store-rating-app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/auth.service';\nimport { safeLocalStorage } from '../utils/safeStorage'; // ← Add this import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // ✅ Fixed: Use safeLocalStorage\n    const token = safeLocalStorage.get('token');\n    const userData = safeLocalStorage.get('user');\n    if (token && userData) {\n      setUser(userData); // Already parsed by safeLocalStorage\n      authService.setToken(token);\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authService.login(email, password);\n      const {\n        access_token,\n        user\n      } = response;\n\n      // ✅ Use safeLocalStorage\n      safeLocalStorage.set('token', access_token);\n      safeLocalStorage.set('user', user);\n      authService.setToken(access_token);\n      setUser(user);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authService.register(userData);\n      const {\n        access_token,\n        user\n      } = response;\n\n      // ✅ Use safeLocalStorage\n      safeLocalStorage.set('token', access_token);\n      safeLocalStorage.set('user', user);\n      authService.setToken(access_token);\n      setUser(user);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    // ✅ Use safeLocalStorage\n    safeLocalStorage.remove('token');\n    safeLocalStorage.remove('user');\n    authService.setToken(null);\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","safeLocalStorage","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","get","userData","setToken","login","email","password","response","access_token","set","error","register","logout","remove","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SMILE/Downloads/trustpilot-store-rating-app/trustpilot-store-rating-app/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { authService } from '../services/auth.service';\nimport { safeLocalStorage } from '../utils/safeStorage'; // ← Add this import\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  role: string;\n  address?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (userData: any) => Promise<void>;\n  logout: () => void;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // ✅ Fixed: Use safeLocalStorage\n    const token = safeLocalStorage.get('token');\n    const userData = safeLocalStorage.get('user');\n    \n    if (token && userData) {\n      setUser(userData); // Already parsed by safeLocalStorage\n      authService.setToken(token);\n    }\n    \n    setLoading(false);\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await authService.login(email, password);\n      const { access_token, user } = response;\n      \n      // ✅ Use safeLocalStorage\n      safeLocalStorage.set('token', access_token);\n      safeLocalStorage.set('user', user);\n      authService.setToken(access_token);\n      \n      setUser(user);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (userData: any) => {\n    try {\n      const response = await authService.register(userData);\n      const { access_token, user } = response;\n      \n      // ✅ Use safeLocalStorage\n      safeLocalStorage.set('token', access_token);\n      safeLocalStorage.set('user', user);\n      authService.setToken(access_token);\n      \n      setUser(user);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    // ✅ Use safeLocalStorage\n    safeLocalStorage.remove('token');\n    safeLocalStorage.remove('user');\n    authService.setToken(null);\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}