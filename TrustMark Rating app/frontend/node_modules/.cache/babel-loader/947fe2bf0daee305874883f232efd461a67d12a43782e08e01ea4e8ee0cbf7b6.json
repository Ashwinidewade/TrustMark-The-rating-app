{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMILE\\\\Downloads\\\\trustpilot-store-rating-app\\\\trustpilot-store-rating-app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/auth.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      setUser(JSON.parse(userData));\n      authService.setToken(token);\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authService.login(email, password);\n      const {\n        access_token,\n        user\n      } = response;\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(user));\n      authService.setToken(access_token);\n      setUser(user);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authService.register(userData);\n      const {\n        access_token,\n        user\n      } = response;\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(user));\n      authService.setToken(access_token);\n      setUser(user);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    authService.setToken(null);\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","setToken","login","email","password","response","access_token","setItem","stringify","error","register","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SMILE/Downloads/trustpilot-store-rating-app/trustpilot-store-rating-app/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React from 'react';\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authService } from '../services/auth.service';\r\n\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  role: string;\r\n  address?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (userData: any) => Promise<void>;\r\n  logout: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      setUser(JSON.parse(userData));\r\n      authService.setToken(token);\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await authService.login(email, password);\r\n      const { access_token, user } = response;\r\n      \r\n      localStorage.setItem('token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      authService.setToken(access_token);\r\n      \r\n      setUser(user);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData: any) => {\r\n    try {\r\n      const response = await authService.register(userData);\r\n      const { access_token, user } = response;\r\n      \r\n      localStorage.setItem('token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      authService.setToken(access_token);\r\n      \r\n      setUser(user);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    authService.setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}