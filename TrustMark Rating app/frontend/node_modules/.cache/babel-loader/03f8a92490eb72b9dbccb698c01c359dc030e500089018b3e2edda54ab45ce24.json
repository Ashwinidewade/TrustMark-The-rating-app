{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMILE\\\\Downloads\\\\trustpilot-store-rating-app\\\\trustpilot-store-rating-app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  loading: false,\n  login: async () => {},\n  logout: () => {},\n  register: async () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) setUser(JSON.parse(storedUser));\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:3001/auth/login', {\n        email,\n        password\n      });\n      const userData = response.data.user;\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      var _error$response;\n      console.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw new Error('Failed to login. Please check your credentials.');\n    }\n  };\n  const register = async (name, email, password, role = 'user') => {\n    try {\n      const response = await axios.post('http://localhost:3001/auth/register', {\n        name,\n        email,\n        password,\n        role\n      });\n      const userData = response.data.user;\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      var _error$response2;\n      console.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw new Error('Failed to register. Please try again.');\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","user","loading","login","logout","register","AuthProvider","children","_s","setUser","setLoading","storedUser","localStorage","getItem","JSON","parse","email","password","response","post","userData","data","setItem","stringify","error","_error$response","console","message","Error","name","role","_error$response2","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/SMILE/Downloads/trustpilot-store-rating-app/trustpilot-store-rating-app/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  role: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n  register: (name: string, email: string, password: string, role?: string) => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  loading: false,\n  login: async () => {},\n  logout: () => {},\n  register: async () => {},\n});\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) setUser(JSON.parse(storedUser));\n    setLoading(false);\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await axios.post('http://localhost:3001/auth/login', { email, password });\n      const userData = response.data.user;\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error: any) {\n      console.error(error.response?.data || error.message);\n      throw new Error('Failed to login. Please check your credentials.');\n    }\n  };\n\n  const register = async (name: string, email: string, password: string, role = 'user') => {\n    try {\n      const response = await axios.post('http://localhost:3001/auth/register', { name, email, password, role });\n      const userData = response.data.user;\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error: any) {\n      console.error(error.response?.data || error.message);\n      throw new Error('Failed to register. Please try again.');\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, login, logout, register }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}