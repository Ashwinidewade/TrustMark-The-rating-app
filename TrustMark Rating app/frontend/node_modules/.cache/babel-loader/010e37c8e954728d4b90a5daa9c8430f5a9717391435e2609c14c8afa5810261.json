{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SMILE\\\\Downloads\\\\trustpilot-store-rating-app\\\\trustpilot-store-rating-app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.tsx\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { authService } from '../services/auth.service';\nimport { safeStorage } from '../utils/safeStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  login: async () => {},\n  register: async () => {},\n  logout: () => {},\n  loading: false\n});\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(() => safeStorage.getItem('user', null));\n  const [loading, setLoading] = useState(false);\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      const response = await authService.login(email, password);\n      setUser(response.user);\n      safeStorage.setItem('user', response.user);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (name, email, password, role = 'user') => {\n    setLoading(true);\n    try {\n      await authService.register(name, email, password, role);\n      // Optionally, auto-login after register:\n      // await login(email, password);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    safeStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"AivzM9tRXGGF55OchLlkz8IFjmY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","authService","safeStorage","jsxDEV","_jsxDEV","AuthContext","user","login","register","logout","loading","useAuth","_s","AuthProvider","children","_s2","setUser","getItem","setLoading","email","password","response","setItem","name","role","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SMILE/Downloads/trustpilot-store-rating-app/trustpilot-store-rating-app/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["// src/contexts/AuthContext.tsx\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { authService } from '../services/auth.service';\nimport { safeStorage } from '../utils/safeStorage';\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  role: string;\n  address?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string, role?: string) => Promise<void>;\n  logout: () => void;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  login: async () => {},\n  register: async () => {},\n  logout: () => {},\n  loading: false,\n});\n\nexport const useAuth = () => useContext(AuthContext);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(() =>\n    safeStorage.getItem<User>('user', null)\n  );\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const login = async (email: string, password: string) => {\n    setLoading(true);\n    try {\n      const response = await authService.login(email, password);\n      setUser(response.user);\n      safeStorage.setItem('user', response.user);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (name: string, email: string, password: string, role: string = 'user') => {\n    setLoading(true);\n    try {\n      await authService.register(name, email, password, role);\n      // Optionally, auto-login after register:\n      // await login(email, password);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    safeStorage.removeItem('user');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAA8B,OAAO;AACxF,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkBnD,MAAMC,WAAW,gBAAGP,aAAa,CAAkB;EACjDQ,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,MAAAA,CAAA,KAAY,CAAC,CAAC;EACrBC,QAAQ,EAAE,MAAAA,CAAA,KAAY,CAAC,CAAC;EACxBC,MAAM,EAAEA,CAAA,KAAM,CAAC,CAAC;EAChBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMb,UAAU,CAACM,WAAW,CAAC;AAAA;AAACO,EAAA,CAAxCD,OAAO;AAMpB,OAAO,MAAME,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzE,MAAM,CAACT,IAAI,EAAEU,OAAO,CAAC,GAAGhB,QAAQ,CAAc,MAC5CE,WAAW,CAACe,OAAO,CAAO,MAAM,EAAE,IAAI,CACxC,CAAC;EACD,MAAM,CAACP,OAAO,EAAEQ,UAAU,CAAC,GAAGlB,QAAQ,CAAU,KAAK,CAAC;EAEtD,MAAMO,KAAK,GAAG,MAAAA,CAAOY,KAAa,EAAEC,QAAgB,KAAK;IACvDF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMpB,WAAW,CAACM,KAAK,CAACY,KAAK,EAAEC,QAAQ,CAAC;MACzDJ,OAAO,CAACK,QAAQ,CAACf,IAAI,CAAC;MACtBJ,WAAW,CAACoB,OAAO,CAAC,MAAM,EAAED,QAAQ,CAACf,IAAI,CAAC;IAC5C,CAAC,SAAS;MACRY,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMV,QAAQ,GAAG,MAAAA,CAAOe,IAAY,EAAEJ,KAAa,EAAEC,QAAgB,EAAEI,IAAY,GAAG,MAAM,KAAK;IAC/FN,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMjB,WAAW,CAACO,QAAQ,CAACe,IAAI,EAAEJ,KAAK,EAAEC,QAAQ,EAAEI,IAAI,CAAC;MACvD;MACA;IACF,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMT,MAAM,GAAGA,CAAA,KAAM;IACnBO,OAAO,CAAC,IAAI,CAAC;IACbd,WAAW,CAACuB,UAAU,CAAC,MAAM,CAAC;EAChC,CAAC;EAED,oBACErB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAErB,IAAI;MAAEC,KAAK;MAAEC,QAAQ;MAAEC,MAAM;MAAEC;IAAQ,CAAE;IAAAI,QAAA,EACrEA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChB,GAAA,CAtCWF,YAAyC;AAAAmB,EAAA,GAAzCnB,YAAyC;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}